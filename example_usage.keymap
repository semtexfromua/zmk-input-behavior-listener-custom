#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/input-event-codes.h>

/ {
    /* input config for arrow keys mode on layer 2 */
    trackball_arrow_listener {
        compatible = "zmk,input-behavior-listener";
        device = <&vtrackball>;
        layers = <2>; // Працює тільки на шарі 2
        evt-type = <INPUT_EV_REL>;
        x-input-code = <INPUT_REL_X>;
        y-input-code = <INPUT_REL_Y>;
        scale-divisor = <1>; // Без масштабування
        bindings = <&ib_move_to_arrow>; // Використовуємо наш новий behavior
    };

    /* Визначаємо behavior з кастомними параметрами */
    ib_move_to_arrow: ib_move_to_arrow {
        compatible = "zmk,input-behavior-move-to-keypress";
        #binding-cells = <0>;
        threshold = <30>; // Поріг чутливості - 30 пікселів
        // x-invert; // Розкоментувати для інверсії X
        // y-invert; // Розкоментувати для інверсії Y
        bindings = <&kp RIGHT>, <&kp LEFT>, <&kp UP>, <&kp DOWN>;
    };

    /* Альтернативний приклад з іншими клавішами */
    ib_move_to_wasd: ib_move_to_wasd {
        compatible = "zmk,input-behavior-move-to-keypress";
        #binding-cells = <0>;
        threshold = <50>; // Менша чутливість
        bindings = <&kp D>, <&kp A>, <&kp W>, <&kp S>; // WASD замість стрілок
    };

    keymap {
        compatible = "zmk,keymap";
        
        default_layer {
            bindings = <
                &kp A    &kp B    &mo 2    // Тримати для переходу на шар 2
                &kp C    &kp D    &kp E
            >;
        };
        
        layer_1 {
            bindings = <
                &trans   &trans   &trans
                &trans   &trans   &trans
            >;
        };
        
        arrow_layer { // Шар 2 - arrow navigation
            bindings = <
                &trans   &trans   &trans
                &trans   &trans   &trans
            >;
        };
    };
}; 